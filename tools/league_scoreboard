#!/bin/bash -ue
#
# league_scoreboard - Generate a scoreboard of a ConquerClub Clan League
#
#    Copyright (C) 2016 Rodrigo Silva (MestreLion) <conquerclub@rodrigosilva.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>

# Reference:
# http://www.conquerclub.com/public.php?mode=showclans3&search_status=&search_clanleague=44


# Default options -------------------------------------------------------------

ongoing=0  # Include ongoing matches?
league=44  # Clan League 7 - Second Division

outfile=""


# Constants and other globals - DO NOT CHANGE! --------------------------------

myname=${0##*/}
url=http://www.conquerclub.com/public.php?mode=showclans3  # Clan Leagues


# Generic helper functions ----------------------------------------------------

fatal()   { if (($#)); then printf '%s' "$@" >&2; printf '\n' >&2; fi; exit 1; }
argerr()  { echo ${1:-error} >&2; usage 1; }
invalid() { argerr "invalid option: ${1:-}" ; }
missing() { argerr "missing ${2:+$2 }argument${1:+ from $1}." ; }
integer() { [[ "$1" ]] || missing "${2:-}" "${3-NUM}"; [[ "$1" != *[!0-9]* ]] ||
            argerr "'$1'${2:+ in $2} is not an integer."; }


# Main functions --------------------------------------------------------------

usage() {
	cat <<-USAGE
	Usage: $myname [options]
	USAGE
	if [[ "${1:-}" ]] ; then
		cat >&2 <<- USAGE
		Try '$myname --help' for more information.
		USAGE
		exit 1
	fi
	cat <<-USAGE

	Generate a scoreboard of a Clan League

	Display options:
	  -h|--help     - Show this page

	  --outfile OUTFILE
	             Output results to OUTFILE instead of stdout.
	             Roughtly equivalent to '$myname > OUTFILE'

	Game search options:
	  --league LEAGUEID
	             League ID.
	             [default: $league]

	  --ongoing
	             Include ongoing matches, evaluating their current status as
	             if they were finished. For example, a 0-0 match is counted
	             as a draw and 0-1 as a loss. By default only finished
	             matches are considered.

	Listing options:
	  --list-leagues
	             List all leagues and their IDs

	Copyright (C) 2016 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
	License: GPLv3 or later. See <http://www.gnu.org/licenses/gpl.html>
	USAGE
	exit 0
}


list_leagues() {
	wget -qO- -- "$url" |
	awk '
	BEGIN {
		RS  = "(</select>)?[ \t\n]*<option[ \t]*value=\""
		FS  = "\"[^>]*>[ \t\n]*|</(option|select)>"
		ORS = "\n"
		OFS = "\t"
		ok  = 0
		print "ID", "NAME"
	}
	!ok && NF == 2 {
		ok=1
		next
	}
	ok && $1 && $2 {
		print $1, $2
	}
	ok && NF>2 {
		exit
	}'
}


# Command-line arguments ------------------------------------------------------

for arg in "$@"; do [[ "$arg" == "-h" || "$arg" == "--help" ]] && usage ; done
while (( $# )); do
	case "$1" in
	--ongoing       ) ongoing=1               ;;
	--list-leagues  ) list_leagues; exit      ;;

	--league=*      ) league=${1#*=}          ;;
	--outfile=*     ) outfile=${1#*=}         ;;

	--league        ) shift ; league=${1:-}   ;;
	--outfile       ) shift ; outfile=${1:-}  ;;

	*               ) invalid "$1"            ;;
	esac
	shift || :
done

integer "$league" "--league" "LEAGUEID"

if [[ "$outfile" ]]; then
	exec > "$outfile"
fi


# Main logic and procedures ---------------------------------------------------

printf "RANK\tCLAN\tMATCHES\tM.WON\tM.DRAW\tM.LOST\tPOINTS\tG.DIFF\tGAMES\n"

wget -qO- --post-data "search_clanleague=${league}&search_status=" "$url" |
awk -v q="'" -v ongoing="$ongoing" '
	BEGIN {
		FS  = "([ \t]*(</nobr>)?</td><td>(<nobr>)?[ \t]*)|</td>"
		OFS = "\t"
		RS  = "<tr class=" q "(even|odd)" q "><td>"
		split("Matches,MW,MD,ML,GW,GL", cols, ",")
	}

	NR == 1 {
		next
	}

	# $1 = (Battle) Id, numeric
	# $2 = (Battle) Name, "CL7 Second Division - Rd 5 - KNT vs SOH"
	# $3 = Clans, "PACK VS SoH", with clans URL
	#	"<a href="q"/public.php?mode=showclans1&ClanId=88"q">PACK </a> VS <a"
	# $4 = Dates, "2015-12-15 - 2015-12-17", "-", "- 2013-10-10"
	# $5 = Status
	# 	"War Waiting/ Games None"
	# 	"War Active/ Games Active"
	# 	"War Active/ Games Inactive"
	# 	"War Complete/ Games Inactive"
	# $6 = Score, "PACK  4  VS SoH  2"
	# $7 = Winners, "", "Otpisani", "the Fallen, The Pig Renters"
	# $8 = Details URL, "/public.php?mode=showclanwar&ClanWarId=12"

	{
		split($6, score, / +(VS)? */)
		clanA = score[1]
		winsA = score[2]
		clanB = score[3]
		winsB = score[4]

		if (! (clanA in clans)) {
			clans[clanA] = clanA
			for (col in cols)
				data[clanA, cols[col]] = 0
		}
		if (! (clanB in clans)) {
			clans[clanB] = clanB
			for (col in cols)
				data[clanB, cols[col]] = 0
		}

		if (ongoing)
			criteria = ($5 != "War Waiting/ Games None")
		else {
			criteria = (($5 == "War Active/ Games Inactive") ||
			            ($5 == "War Complete/ Games Inactive"))
		}

		if (criteria) {
			data[clanA, "Matches"] += 1
			data[clanB, "Matches"] += 1

			if (winsA > winsB) {
				data[clanA, "MW"] += 1
				data[clanB, "ML"] += 1
			}
			else if (winsA < winsB) {
				data[clanA, "ML"] += 1
				data[clanB, "MW"] += 1
			}
			else {
				data[clanA, "MD"] += 1
				data[clanB, "MD"] += 1
			}
		}

		data[clanA, "GW"] += winsA
		data[clanA, "GL"] += winsB
		data[clanB, "GW"] += winsB
		data[clanB, "GL"] += winsA
	}

	END {
		for (clan in clans) {
			print \
				clan,
				data[clan, "Matches"],
				data[clan, "MW"],
				data[clan, "MD"],
				data[clan, "ML"],
				2 * data[clan, "MW"] + 1 * data[clan, "MD"],
				data[clan, "GW"] - data[clan, "GL"],
				data[clan, "GW"] "-" data[clan, "GL"]
		}
	}' |
LC_ALL=C sort -gr -k6,6 -k7,7 -k8 |
IFS=$'\t' grep -n '' |
tr ":" "\t"
