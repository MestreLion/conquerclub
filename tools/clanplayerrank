#!/bin/bash -ue
#
# clanplayerrank - Rank clan players in a League war in ConquerClub
#
#    Copyright (C) 2016 Rodrigo Silva (MestreLion) <conquerclub@rodrigosilva.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>

# Reference:
# https://www.conquerclub.com/public.php?mode=showclans3&search_status=&search_clanleague=44&search_clan1=88


# Default options -------------------------------------------------------------

clan=88  # THE PACK
league=44  # Clan League 7 - Second Division

verbose=1
outfile=""


# Constants and other globals - DO NOT CHANGE! --------------------------------

myname=${0##*/}
urlcc=http://www.conquerclub.com
urlsearch="$urlcc"/public.php?mode=showclans3  # Clan Leagues


# Generic helper functions ----------------------------------------------------

bold()    { if ! [[ "$TERM" = dumb ]]; then tput bold; fi; printf '%s' "$@"
            if ! [[ "$TERM" = dumb ]]; then tput sgr0; fi; }
green()   { if ! [[ "$TERM" = dumb ]]; then tput setaf 2; fi; bold "$@"; }

fatal()   { if (($#)); then printf '%s' "$@" >&2; printf '\n' >&2; fi; exit 1; }
message() { if ((verbose)); then printf '%s' "$@" >&2; printf '\n' >&2; fi; }
header()  { if ((verbose)); then echo "$(green "* " "$@")" >&2; fi; }

argerr()  { echo ${1:-error} >&2; usage 1; }
invalid() { argerr "invalid option: ${1:-}" ; }
missing() { argerr "missing ${2:+$2 }argument${1:+ from $1}." ; }
integer() { [[ "$1" ]] || missing "${2:-}" "${3-NUM}"; [[ "$1" != *[!0-9]* ]] ||
            argerr "'$1'${2:+ in $2} is not an integer."; }


# Main functions --------------------------------------------------------------

usage() {
	cat <<-USAGE
	Usage: $myname [options]
	USAGE
	if [[ "${1:-}" ]] ; then
		cat >&2 <<- USAGE
		Try '$myname --help' for more information.
		USAGE
		exit 1
	fi
	cat <<-USAGE

	Rank players in a Clan League

	Display options:
	  -h|--help     - Show this page
	  -q|--quiet    - Do not output progress messages, which are normally
	                  made to stderr. $myname will be completely silent
	                  until the result is output to stdout (see --output)

	  --outfile OUTFILE
	             Output results to OUTFILE instead of stdout.
	             Roughtly equivalent to '$myname > OUTFILE'

	Game search options:
	  --clan CLANID
	             Clan ID.
	             [default: $clan]

	  --league LEAGUEID
	             League ID. If blank it will count games from all leagues.
	             [default: $league]

	Listing options:
	  --list-clans
	             List all clans and their IDs

	  --list-leagues
	             List all leagues and their IDs

	Copyright (C) 2016 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
	License: GPLv3 or later. See <http://www.gnu.org/licenses/gpl.html>
	USAGE
	exit 0
}


list_ids() {
	local optiontype=${1:-clans}
	wget -qO- -- "$urlsearch" |
	awk -v optiontype="$optiontype" '
	BEGIN {
		RS  = "(</select>)?[ \t\n]*<option[ \t]*value=\""
		FS  = "\"[^>]*>[ \t\n]*|</(option|select)>"
		ORS = "\n"
		OFS = "\t"
		ok  = 0
		if (optiontype == "clans")
			start = 4
		else
			start = 2
		print "ID", "NAME"
		print "-------------------------------------------------"
	}
	!ok && NF == start {
		ok=1
		next
	}
	ok && $1 && $2 {
		print $1, $2
	}
	ok && NF>2 {
		exit
	}'
}

# Command-line arguments ------------------------------------------------------

for arg in "$@"; do [[ "$arg" == "-h" || "$arg" == "--help" ]] && usage ; done
while (( $# )); do
	case "$1" in
	-q|--quiet      ) verbose=0               ;;
	--list-clans    ) list_ids clans;   exit  ;;
	--list-leagues  ) list_ids leagues; exit  ;;

	--clan=*        ) clan=${1#*=}            ;;
	--league=*      ) league=${1#*=}          ;;
	--outfile=*     ) outfile=${1#*=}         ;;

	--clan          ) shift ; clan=${1:-}     ;;
	--league        ) shift ; league=${1:-}   ;;
	--outfile       ) shift ; outfile=${1:-}  ;;

	*               ) invalid "$1"            ;;
	esac
	shift || :
done

integer "$clan" "--clan" "CLANID"

if [[ "$outfile" ]]; then
	exec > "$outfile"
fi

searchdata="search_clan1=${clan}${league:+&search_clanleague=$league}"


# Main logic and procedures ---------------------------------------------------

while read -r url first name; do
	if ((first)); then
		side="home"
	else
		side="away"
	fi
	header "Reading $side games from $name"
	wget -qO- "${urlcc}${url}" |
	awk  -v q="'" -v ok="$first" '
	BEGIN {
		w = "[ \t\r\n]*"
		RS = w "(</tr>)?" w "<tr>" w "<td>" w "<a target=_blank href=" q
		FS = q ">|</a>" w "</td>" w "<td>|</td>"
		OFS = "\t"
		ORS = "\n"
	}
	NR == 1 {next}

	# $1 = Player URL, "/forum/memberlist.php?mode=viewprofile&u=683719"
	# $2 = Player Name, "MestreLion"
	# $3 = Score, "1/2"

	ok {
		split($1, url, "u=")
		split($3, score, "/")
		id = url[2]

		print id, $2, score[1], score[2]
		if($4) exit
	}
	! ok && $4 { ok = 1 }' &
done < <(
	wget -qO- --post-data "$searchdata&search_status=" "$urlsearch" |
	awk -v q="'" -v clanid="$clan" '
	BEGIN {
		FS  = "([ \t]*(</nobr>)?</td><td>(<nobr>)?[ \t]*)|</td>"
		OFS = "\t"
		RS  = "<tr class=" q "(even|odd)" q "><td>"
	}

	NR == 1 {next}

	# $1 = (Battle) Id, numeric
	# $2 = (Battle) Name, "CL7 Second Division - Rd 5 - KNT vs SOH"
	# $3 = Clans, "PACK VS SoH", with clans URL
	#	"<a href="q"/public.php?mode=showclans1&ClanId=88"q">PACK </a> VS <a"
	# $4 = Dates, "2015-12-15 - 2015-12-17", "-", "- 2013-10-10"
	# $5 = Status
	# 	"War Waiting/ Games None"
	# 	"War Active/ Games Active"
	# 	"War Active/ Games Inactive"
	# 	"War Complete/ Games Inactive"
	# $6 = Score, "PACK  4  VS SoH  2"
	# $7 = Winners, "", "Otpisani", "the Fallen, The Pig Renters"
	# $8 = Details URL, "/public.php?mode=showclanwar&ClanWarId=12"

	{
		if ($5 != "War Waiting/ Games None") {
			split($3, clans, "ClanId=|" q ">")
			split($8, url, q)
			if(clans[2] == clanid)
				first = 1
			else
				first = 0
			print url[2], first, $2
		}
	}'
) |
awk  -v q="'" '
BEGIN {
	FS = "\t"
	OFS = "\t"
	CONVFMT = "%04d"
}
{
	players[$1] = $2
	wins[$1]  += $3
	games[$1] += $4
}
END {
	for (player in players) {
		if (games[player] > 0) {
			perc = sprintf("%5.1f", \
				100.0 * wins[player] / games[player])
			print perc, wins[player], games[player], players[player]
		}
	}
}' |
sort -nr |
awk '
BEGIN {
	FS = "\t"
	OFS = "\t"
	wins  = 0
	games = 0
	perc  = 0
}
{
	if (!games)
		print "WIN%", "WINS", "GAMES", "PLAYER"
	wins  += $2
	games += $3
	print
}
END {
	if (games)
		perc = sprintf("%5.1f", 100.0 * wins / games)
	print perc, wins, games, "TOTAL"
}'
